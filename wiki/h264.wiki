#summary h264 and the Wii

=h264=
Upon discussion with the ffmpeg team, it seems that implementing h264 on the Wii is a hard task.

The PPC Processor lacks altivec, meaning that in order to get a competent h264 implementation one would need to start from scratch, and even then would not be able to play HD videos.

In short, h264 is not a priority for us as the work required could take months, but if anyone feels the need to take the task upon themselves then just let us know.

The IRC transcript is below for anyone who is interested.

===Log of irc://irc.freenode.net/ffmpeg===
{{{
<Dark_Shikari> I suspect in general that the PPC asm is not as optimized as it could be
<Dark_Shikari> especially for h264
<Dark_Shikari> as development has mostly focused on x86
<Dark_Shikari> if you want to speed it up, you should look at a few things:
<Flark> I would be interested to know how well h.264 works on the playstation 3
<Dark_Shikari> 1) motion compensation
<Dark_Shikari> 2) idct
<Dark_Shikari> 3) deblocking asm
<rodries> Dark_Shikari the problem is that wii hasn't altivec
<rodries> so only can be optimized using ppc asm
<Dark_Shikari> .... then there's your problem
<Dark_Shikari> without altivec, good luck playing ANYTHING
<Dark_Shikari> we benchmarked a G5 a while back when writing some altivec for x264
<Dark_Shikari> the altivec was for an interpolation function
<Dark_Shikari> the altivec version was almost as fast as a Core 2 with massively optimized asm
<Dark_Shikari> the C was almost 3x slower than the C on the Core 2
<Dark_Shikari> the altivec was over 40x faster than C.
<rodries> we only have paired-single
<Dark_Shikari> rodries: well, then it's time to optimize the C code
<rodries> but paired-single is only for float
* Kovensky wonders why the hell did someone make a PPC CPU without Ativec
<rodries> so h264  C code can be optimized?
<Dark_Shikari> rodries: I'm looking at the MC atm
<rodries> Kovensky only nintendo knows
<Kovensky> that feels more like intentional crippling :/
<rodries> nobody can understand why they select paired-single instead altivec
<Kovensky> yes...
<Dark_Shikari> visionofarun: yes
<Dark_Shikari> rodries: is the cpu 32-bit or 64-bit?
<rodries> 32 bit
<Dark_Shikari> ok, basically your problem is as follows
<Dark_Shikari> 1) MC uses a 6-tap filter that requires 16-bit precision.  This makes pseudo-SIMD (SWAR) impossible
<Dark_Shikari> see http://guru.multimedia.cx/simd-without-simd/ for more information on SWAR
<Dark_Shikari> MPEG2/4-style hpel can be written with SWAR (And in ffmpeg, the C versions are)
<Dark_Shikari> thus MPEG2/4 it does 4 pixels at a time, while in H.264 it has to do one at a time
<Dark_Shikari> This could theoretically be improved by using SWAR for the final average step (qpel is averaged from two hpel positions), but probably wouldn't help much because you'd have to spend time packing the hpel values into 32-bit chunks
<rodries> the Wii's CPU, is a derivative of the PowerPC 750 CL clocked at 729Mhz
<Dark_Shikari> Deblock is completely impossible to SWAR without real SIMD because it is very branchy--in normal SIMD you have to do all sorts of fancy magic
<Dark_Shikari> you need instructions like min, max, packed compare, etc
<Dark_Shikari> I could see--perhaps--dct/idct being possible with SWAR.
<Dark_Shikari> but it would require heavy munging
<Dark_Shikari> in summary
<Dark_Shikari> no altivec = you are fucked
<Dark_Shikari> however, you're not entirely screwed.
<Dark_Shikari> if you can control encoding, you can cheat!
<rodries> why?
<Dark_Shikari> x264 has --subme 0, which is not meant to be practical at all for any real use
<Dark_Shikari> ... but it disables all subpel motion search
<Dark_Shikari> thus all motion vectors are fullpel, and there's no interpolation to do at all.
<Dark_Shikari> combine that with --no-cabac and --nf (no deblocking), and you'll get a (shitty) h264 stream that won't take much CPU ;)
<rodries> you are talking about encoding
<Dark_Shikari> yes
<rodries> am I right?
<Dark_Shikari> i.e. encoding the videos to take less CPU on decoding
<rodries> ok
<Kovensky> it will be quick to both encode and decode
<Dark_Shikari> well yeah, with subme 0, heh
<rodries> then wii can't decode h264 because nintendo hasn't added altivec
<Dark_Shikari> yes, that's your basic problem
<rodries> ok
<Dark_Shikari> also, is there any documentation about that PPC chip with regard to instruction timings?
<rodries> thnks a lot for your advice
<rodries> the only info I have is a derivative of the PowerPC 750 CL clocked at 729Mhz
<Dark_Shikari> hmm there seems to be http://www-01.ibm.com/chips/techlib/techlib.nsf/techdocs/852569B20050FF7785256996006C28E2/$file/7xx_um.pdf
<Dark_Shikari> yeah, no way that's going to work
<Dark_Shikari> it's just too slow a chip
<Dark_Shikari> I mean, some chips like ARM can make up for slow speed by having good instruction sets like neon
<Dark_Shikari> that chip, it's slow and shit
<Dark_Shikari> I mean there are many other things you could do, such as swapping in MPEG-style motion compensation in P-frames, but that could cause serious artifacting to the point of being unwatchable.
<MrNaz_cic> which chip are we badmouthing?
<Dark_Shikari> wii ppc chip
<Dark_Shikari> no altivec.
<rodries> so don't worry
<rodries> wii can't decode h264
<rodries> period
<Dark_Shikari> well, not at SD resolution
<Dark_Shikari> maybe at CIF :) 
}}}

===Log of irc://irc.efnet.net/wiidev===
{{{
<rodries> John_K you are right
<rodries> but wii can't decode hd h264
<rodries> or sd
<John_K> I"m 100% sure you could do h264 baseline stuff no problem
<John_K> it doesn't have the memory to do more than a few ref-frames
<rodries> if you encode with cabac is impossible
<John_K> you could probably make cabac work but I wouldn't start there
<John_K> get cavlc working first
<rodries> but can you use ffmpeg from base?
<John_K> you could try, personaly I'd do it from scratch
<rodries> ohhh
<John_K> use ffmpeg + the specs as a guide
<rodries> I commented to ffmpeg developer
<rodries> but he told me that wii hasn't enough cpu
<rodries> and no altivec
<John_K> for what?
<rodries> for cabac
<John_K> hd? he's right
<rodries> or sd
<John_K> ehh, you could
<John_K> but it would take work
<rodries> he think only cif
<John_K> ie not hit recompile and have it work
<rodries> he has studied wii chip
<John_K> *shrug*
<rodries> http://www-01.ibm.com/chips/techlib/techlib.nsf/techdocs/852569B20050FF7785256996006C28E2/$file/7xx_um.pdf
<John_K> it wouldn't be easy that's for sure
<John_K> I know what the CPU is
<rodries> ok
<rodries> you are the master here
<John_K> I'm just saying if you coded something specifically for the wii it could probably be done
<John_K> but if you want to port something it would take a lot of work
}}}